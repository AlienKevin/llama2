# EMOJIPAINT MVU PRELUDE #

type Emoji = String in 
type Row = Int in 
type Col = Int in 
type Grid = [[Emoji]] in

type Model = (
  Grid,     # The 2D grid of emojis #
  Emoji,    # The currently selected emoji #
  [Emoji]   # The list of available emojis #
) in

type Action =
  + SelectEmoji(Emoji)    # Set the currently selected emoji #
  + StampEmoji(Row, Col)  # Stamp the current emoji at the specified position #
  + ClearCell(Row, Col)   # Clear the emoji at the specified position #
  + ClearGrid             # Clear the entire grid #
  + FillRow(Row)          # Fill the specified row with the current emoji #
in

let model_init: Model = (
  [["","",""],["","",""],["","",""]], # Initial 3x3 empty grid #
  "ðŸ˜„",                               # Initial selected emoji #
  ["ðŸ˜„", "ðŸ˜…", "ðŸ˜†", "ðŸ˜‰", "ðŸ˜Š"]        # Available emojis #
) in
  
let updateGrid: (Grid, Row, Col, Emoji) -> Grid =
  fun grid, row, col, emoji ->
    List.mapi(
      fun i, r -> 
        if i == row  
        then List.mapi(fun j, c -> if j == col then emoji else c, r) 
        else r, 
      grid
   ) in
  
let clearGrid: Grid -> Grid =
  fun grid -> List.map(fun row -> List.map(fun _ -> "", row), grid) 
in
  
let fillRowInGrid: (Grid, Row, Emoji) -> Grid =
  fun grid, rowToFill, emoji ->
    List.mapi(
      fun i, row -> 
        if i == rowToFill 
        then List.map(fun _ -> emoji, row) 
        else row,
      grid  
  ) in
