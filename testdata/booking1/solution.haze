# Update the Room Booking app model based on an action #

let update: (Model, Action) -> Model =
  fun (formState, bookings, nextId), action ->
    case action
      | AddBooking(user, weekday, timeOfDay) =>
        let newBooking = ((weekday, timeOfDay), user, nextId) in
        (((weekday, timeOfDay), user), newBooking :: bookings, nextId + 1)
      | CancelBooking(user, id) =>
        let updatedBookings = List.filter(
          fun (_, u: User, i: BookingID) -> (u != user) \/ (i != id), bookings) in
        (formState, updatedBookings, nextId)
      | ClearBookings =>
        (formState, [], nextId)
      | ClearRange(startTime, lastTime) =>
        let updatedBookings = List.filter(
          fun ((weekday, timeOfDay), _, _):Booking ->
            !compareTimeRange((weekday,timeOfDay), startTime, lastTime), bookings) in
        (formState, updatedBookings, nextId)  
    end  
in
