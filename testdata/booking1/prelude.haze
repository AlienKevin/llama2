# ROOM BOOKING MVU PRELUDE #

type Weekday = M + T + W + R + F in
type TimeOfDay = AM + PM in
type Time = (Weekday, TimeOfDay) in
type User = String in
type BookingID = Int in
type Booking = (Time, User, BookingID) in
type BookingFormData = (Time, User) in
type Model = (BookingFormData, [Booking], BookingID) in

type Action =
  + AddBooking(User, Weekday, TimeOfDay)
  + CancelBooking(User, Int)
  + ClearBookings
  + ClearRange(Time, Time) 
in
    
let initFormState = ((M, AM), "") in
let Model.init: Model = (initFormState, [], 0) in

let getBookings: Model -> [Booking] =
  fun _, bs,_ -> bs in
      
let bookingExists: (Model, Booking) -> Bool =
  fun model, booking ->
    List.exists(fun b -> b == booking, getBookings(model))  
in
  
let getUserBookings: (Model, User) -> [Booking] =
  fun model, user ->
    List.filter(fun (_, u:User,_) -> u == user, getBookings(model)) 
in

let getBookingById: (Model, BookingID) -> Booking =
  fun model, id ->
    case List.filter(fun (_, _, i:BookingID) -> i == id, getBookings(model))
      | [booking] => booking
      | _ => ?  
    end  
in

let weekdayIndex: Weekday -> Int =
  fun day ->
    case day
      | M => 0
      | T => 1
      | W => 2
      | R => 3
      | F => 4   
    end   
in

let isBeforeOrEqual: (TimeOfDay, TimeOfDay) -> Bool =
  fun t1, t2 ->
    case t1, t2
      | AM, _ => true
      | PM, PM => true
      | _ => false   
    end 
in
  
let compareTimeRange: (Time, Time, Time) -> Bool =
  fun (weekday, timeOfDay), (startWeekday, startTime), (lastWeekday, lastTime) ->
    let bookingIndex = weekdayIndex(weekday) in
    let startIndex = weekdayIndex(startWeekday) in
    let lastIndex = weekdayIndex(lastWeekday) in
    if bookingIndex > startIndex && bookingIndex < lastIndex then
      true   
    else if bookingIndex == startIndex && bookingIndex == lastIndex then
      isBeforeOrEqual(startTime, timeOfDay)
      && isBeforeOrEqual(timeOfDay, lastTime)  
    else if bookingIndex == startIndex then
      isBeforeOrEqual(startTime, timeOfDay)  
    else if bookingIndex == lastIndex then
      isBeforeOrEqual(timeOfDay, lastTime)  
    else
      false   
in