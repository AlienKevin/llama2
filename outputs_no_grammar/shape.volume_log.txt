
================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =



================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
   


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->



================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
       


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s



================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
       


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        |


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | S


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r)


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) =>


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 /


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 *


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi *


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r **


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0



================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
       


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        |


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | C


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l)


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) =>


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l **


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0



================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
       


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        |


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | C


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | Cyl


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | Cylinder


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | Cylinder(


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | Cylinder(r


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | Cylinder(r,


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | Cylinder(r, h


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | Cylinder(r, h)


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | Cylinder(r, h) =>


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | Cylinder(r, h) => pi


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | Cylinder(r, h) => pi *


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | Cylinder(r, h) => pi * r


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | Cylinder(r, h) => pi * r **


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | Cylinder(r, h) => pi * r ** 


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | Cylinder(r, h) => pi * r ** 2


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | Cylinder(r, h) => pi * r ** 2.


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | Cylinder(r, h) => pi * r ** 2.0


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | Cylinder(r, h) => pi * r ** 2.0 *


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | Cylinder(r, h) => pi * r ** 2.0 * h


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | Cylinder(r, h) => pi * r ** 2.0 * h end


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | Cylinder(r, h) => pi * r ** 2.0 * h end in


================
# Radius of a shape #
type Radius = Float in

# Side length of a shape #
type SideLength = Float in

# Height of a shape #
type Height = Float in

# Common 3D shapes #
type Shape =
  + Sphere(Radius)
  + Cube(SideLength)
  + Cylinder(Radius, Height)
in

# Calculate the volume of a shape #
let volume : Shape -> Float =
    fun s ->
        case s
        | Sphere(r) => 4.0 / 3.0 * pi * r ** 3.0
        | Cube(l) => l ** 3.0
        | Cylinder(r, h) => pi * r ** 2.0 * h end in


