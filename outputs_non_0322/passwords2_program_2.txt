# Update Password Strength Checker app model based on an action #

let update: (Model, Action) -> Model =
  fun model, action ->
    case model, action
    | (_, _, Strong), _ => model
    | (pw, c, Weak \/ Moderate), ClearCriteria => (pw, [], Weak)
    | (pw, c, _), AddCriterion(new_criterion) => 
      let new_criteria = List.filter(
        fun old_criterion -> 
          not(old_criterion == new_criterion), 
        c
      ) in (pw, new_criteria @ [new_criterion], calculateStrength(pw, new_criteria @ [new_criterion]))
    | (pw, c, _), RemoveCriterion(old_criterion) => 
      let new_criteria = List.filter(
        fun criterion ->
          not(criterion == old_criterion), 
        c
      ) in (pw, new_criteria, calculateStrength(pw, new_criteria))
    | (_, _, _), UpdatePassword(new_password) =>
      let new_strength = calculateStrength(new_password, model.2) in 
        (new_password, model.1, new_strength)
  end in
  
# View #

type Msg = (Action -> Action) in